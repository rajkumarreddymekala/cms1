/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  PendingUserLayouts as PrismaPendingUserLayouts,
  Layouts as PrismaLayouts,
} from "@prisma/client";

export class PendingUserLayoutsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PendingUserLayoutsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.pendingUserLayouts.count(args);
  }

  async pendingUserLayoutsItems(
    args: Prisma.PendingUserLayoutsFindManyArgs
  ): Promise<PrismaPendingUserLayouts[]> {
    return this.prisma.pendingUserLayouts.findMany(args);
  }
  async pendingUserLayouts(
    args: Prisma.PendingUserLayoutsFindUniqueArgs
  ): Promise<PrismaPendingUserLayouts | null> {
    return this.prisma.pendingUserLayouts.findUnique(args);
  }
  async createPendingUserLayouts(
    args: Prisma.PendingUserLayoutsCreateArgs
  ): Promise<PrismaPendingUserLayouts> {
    return this.prisma.pendingUserLayouts.create(args);
  }
  async updatePendingUserLayouts(
    args: Prisma.PendingUserLayoutsUpdateArgs
  ): Promise<PrismaPendingUserLayouts> {
    return this.prisma.pendingUserLayouts.update(args);
  }
  async deletePendingUserLayouts(
    args: Prisma.PendingUserLayoutsDeleteArgs
  ): Promise<PrismaPendingUserLayouts> {
    return this.prisma.pendingUserLayouts.delete(args);
  }

  async getLayout(parentId: string): Promise<PrismaLayouts | null> {
    return this.prisma.pendingUserLayouts
      .findUnique({
        where: { id: parentId },
      })
      .layout();
  }
}
