/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsInt,
  Min,
  Max,
  IsDate,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { LayoutSectionCreateNestedManyWithoutLayoutsItemsInput } from "./LayoutSectionCreateNestedManyWithoutLayoutsItemsInput";
import { UserLayoutsCreateNestedManyWithoutLayoutsItemsInput } from "./UserLayoutsCreateNestedManyWithoutLayoutsItemsInput";
import { PendingUserLayoutsCreateNestedManyWithoutLayoutsItemsInput } from "./PendingUserLayoutsCreateNestedManyWithoutLayoutsItemsInput";

@InputType()
class LayoutsCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  thumbnailUrl?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  publishedVersion?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  publishedSubversion?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  currentVersion?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  currentSubversion?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  currentVersionStatus?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  orderBy?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  status?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  createdBy?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  authorisedBy?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdOn?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  authorisedOn?: Date | null;

  @ApiProperty({
    required: false,
    type: () => LayoutSectionCreateNestedManyWithoutLayoutsItemsInput,
  })
  @ValidateNested()
  @Type(() => LayoutSectionCreateNestedManyWithoutLayoutsItemsInput)
  @IsOptional()
  @Field(() => LayoutSectionCreateNestedManyWithoutLayoutsItemsInput, {
    nullable: true,
  })
  layoutSections?: LayoutSectionCreateNestedManyWithoutLayoutsItemsInput;

  @ApiProperty({
    required: false,
    type: () => UserLayoutsCreateNestedManyWithoutLayoutsItemsInput,
  })
  @ValidateNested()
  @Type(() => UserLayoutsCreateNestedManyWithoutLayoutsItemsInput)
  @IsOptional()
  @Field(() => UserLayoutsCreateNestedManyWithoutLayoutsItemsInput, {
    nullable: true,
  })
  userLayoutsItems?: UserLayoutsCreateNestedManyWithoutLayoutsItemsInput;

  @ApiProperty({
    required: false,
    type: () => PendingUserLayoutsCreateNestedManyWithoutLayoutsItemsInput,
  })
  @ValidateNested()
  @Type(() => PendingUserLayoutsCreateNestedManyWithoutLayoutsItemsInput)
  @IsOptional()
  @Field(() => PendingUserLayoutsCreateNestedManyWithoutLayoutsItemsInput, {
    nullable: true,
  })
  pendingUserLayoutsItems?: PendingUserLayoutsCreateNestedManyWithoutLayoutsItemsInput;
}

export { LayoutsCreateInput as LayoutsCreateInput };
